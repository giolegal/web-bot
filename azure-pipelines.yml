# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  buildConfiguration: 'Release'

# do this before all your .NET Core tasks	
steps:

- script: ls
  workingDirectory: 'src'
  displayName: 'ls0'

- script: dotnet build --configuration $(buildConfiguration)
  workingDirectory: 'src'
  displayName: 'dotnet build $(buildConfiguration)'

- script: dotnet tool install -g dotnet-sonarscanner
  workingDirectory: 'src'
  displayName: 'install sonar scanner'

- script: ls
  workingDirectory: 'src'
  displayName: 'ls1'

- script: dotnet sonarscanner begin /k:"web-bot" /o:"giolegal" /d:sonar.host.url=https://sonarcloud.io /d:sonar.login=$(MY_LOGIN_TOKEN_GENERATED_IN_SONARCLOUD) /d:sonar.cs.opencover.reportsPaths="coverage.opencover.xml"
  workingDirectory: 'src'
  displayName: 'run sonar scanner'

# test and produce output for code coverage for sonar scanner
- script: dotnet test /p:CoverletOutputFormat=opencover /p:CoverletOutput=../ /p:CollectCoverage=true /p:Exclude="[xunit.*]"*
  workingDirectory: 'src'
  displayName: 'dotnet test'

- script: ls
  workingDirectory: 'src'
  displayName: 'ls2'

# send results to sonarcloud
- script: dotnet sonarscanner end /d:sonar.login=$(MY_LOGIN_TOKEN_GENERATED_IN_SONARCLOUD)
  workingDirectory: 'src'
  displayName: 'push sonar results to cloud'


